[{"D:\\Programming\\Typescript\\definitely-not-dnd\\src\\index.tsx":"1","D:\\Programming\\Typescript\\definitely-not-dnd\\src\\serviceWorker.ts":"2","D:\\Programming\\Typescript\\definitely-not-dnd\\src\\app\\store.ts":"3","D:\\Programming\\Typescript\\definitely-not-dnd\\src\\App.tsx":"4","D:\\Programming\\Typescript\\definitely-not-dnd\\src\\style\\mainTheme.ts":"5","D:\\Programming\\Typescript\\definitely-not-dnd\\src\\features\\header\\Header.tsx":"6","D:\\Programming\\Typescript\\definitely-not-dnd\\src\\features\\map\\Map.tsx":"7","D:\\Programming\\Typescript\\definitely-not-dnd\\src\\features\\campaigns\\Campaigns.tsx":"8","D:\\Programming\\Typescript\\definitely-not-dnd\\src\\features\\characters\\Characters.tsx":"9","D:\\Programming\\Typescript\\definitely-not-dnd\\src\\features\\monsters\\Monsters.tsx":"10"},{"size":918,"mtime":1609337044052,"results":"11","hashOfConfig":"12"},{"size":5424,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":322,"mtime":1609241985026,"results":"14","hashOfConfig":"12"},{"size":1597,"mtime":1609350124174,"results":"15","hashOfConfig":"12"},{"size":1109,"mtime":1609349270364,"results":"16","hashOfConfig":"12"},{"size":1540,"mtime":1609345908411,"results":"17","hashOfConfig":"12"},{"size":146,"mtime":1609344300514,"results":"18","hashOfConfig":"12"},{"size":164,"mtime":1609344295875,"results":"19","hashOfConfig":"12"},{"size":166,"mtime":1609344641686,"results":"20","hashOfConfig":"12"},{"size":161,"mtime":1609344884428,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1a1t4gz",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"D:\\Programming\\Typescript\\definitely-not-dnd\\src\\index.tsx",[],["44","45"],"D:\\Programming\\Typescript\\definitely-not-dnd\\src\\serviceWorker.ts",[],"D:\\Programming\\Typescript\\definitely-not-dnd\\src\\app\\store.ts",[],"D:\\Programming\\Typescript\\definitely-not-dnd\\src\\App.tsx",["46"],"D:\\Programming\\Typescript\\definitely-not-dnd\\src\\style\\mainTheme.ts",["47"],"D:\\Programming\\Typescript\\definitely-not-dnd\\src\\features\\header\\Header.tsx",["48"],"import React from 'react';\r\nimport {AppBar, makeStyles, Toolbar, Typography, Theme, Button, Container} from '@material-ui/core';\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    header: {\r\n        backgroundColor: theme.palette.primary.main,\r\n    }\r\n}))\r\n\r\nconst headerData = [\r\n    {\r\n        label: \"Map\",\r\n        href: \"/map\",\r\n    },\r\n    {\r\n        label: \"Characters\",\r\n        href: \"/characters\",\r\n    },\r\n    {\r\n        label: \"Campaigns\",\r\n        href: \"/campaigns\",\r\n    },\r\n    {\r\n        label: \"Monsters\",\r\n        href: \"/monsters\",\r\n    }\r\n]\r\n\r\nconst Header = () => {\r\n\r\n    const getMenuButtons = () => {\r\n        return headerData.map(({label, href}) => {\r\n            return (\r\n                <Button \r\n                    {...{\r\n                        key: label,\r\n                        color: \"inherit\",\r\n                        to: href,\r\n                        component: RouterLink,\r\n                    }}\r\n                >\r\n                    {label}\r\n                </Button>\r\n            )\r\n        });\r\n    };\r\n\r\n    return (\r\n        <header>\r\n            <AppBar>\r\n                <Container maxWidth=\"xl\">\r\n                    <Toolbar>\r\n                        <Typography variant=\"h6\">Definitely Not DND</Typography>\r\n                        {getMenuButtons()}    \r\n                    </Toolbar> \r\n                </Container>\r\n            </AppBar>\r\n            <Toolbar />\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","D:\\Programming\\Typescript\\definitely-not-dnd\\src\\features\\map\\Map.tsx",[],"D:\\Programming\\Typescript\\definitely-not-dnd\\src\\features\\campaigns\\Campaigns.tsx",[],"D:\\Programming\\Typescript\\definitely-not-dnd\\src\\features\\characters\\Characters.tsx",[],"D:\\Programming\\Typescript\\definitely-not-dnd\\src\\features\\monsters\\Monsters.tsx",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":26},{"ruleId":"53","severity":1,"message":"57","line":2,"column":10,"nodeType":"55","messageId":"56","endLine":2,"endColumn":14},{"ruleId":"53","severity":1,"message":"58","line":5,"column":7,"nodeType":"55","messageId":"56","endLine":5,"endColumn":16},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"@typescript-eslint/no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'dark' is defined but never used.","'useStyles' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
[{"D:\\Programming\\Typescript\\definitely-not-dnd\\src\\index.tsx":"1","D:\\Programming\\Typescript\\definitely-not-dnd\\src\\serviceWorker.ts":"2","D:\\Programming\\Typescript\\definitely-not-dnd\\src\\App.tsx":"3","D:\\Programming\\Typescript\\definitely-not-dnd\\src\\style\\mainTheme.ts":"4","D:\\Programming\\Typescript\\definitely-not-dnd\\src\\features\\header\\Header.tsx":"5","D:\\Programming\\Typescript\\definitely-not-dnd\\src\\features\\map\\Map.tsx":"6","D:\\Programming\\Typescript\\definitely-not-dnd\\src\\features\\campaigns\\Campaigns.tsx":"7","D:\\Programming\\Typescript\\definitely-not-dnd\\src\\features\\characters\\Characters.tsx":"8","D:\\Programming\\Typescript\\definitely-not-dnd\\src\\features\\monsters\\Monsters.tsx":"9","D:\\Programming\\Typescript\\definitely-not-dnd\\src\\features\\common\\mainPages.tsx":"10","D:\\Programming\\Typescript\\definitely-not-dnd\\src\\features\\greeting\\Greeting.tsx":"11","D:\\Programming\\Typescript\\definitely-not-dnd\\src\\redux\\store.ts":"12","D:\\Programming\\Typescript\\definitely-not-dnd\\src\\features\\map\\mapReducer.ts":"13","D:\\Programming\\Typescript\\definitely-not-dnd\\src\\features\\map\\mapTypes.ts":"14","D:\\Programming\\Typescript\\definitely-not-dnd\\src\\features\\map\\Sidebar.tsx":"15","D:\\Programming\\Typescript\\definitely-not-dnd\\src\\features\\map\\Grid.tsx":"16","D:\\Programming\\Typescript\\definitely-not-dnd\\src\\features\\map\\Tiles.tsx":"17","D:\\Programming\\Typescript\\definitely-not-dnd\\src\\features\\map\\Tile.tsx":"18","D:\\Programming\\Typescript\\definitely-not-dnd\\src\\features\\map\\mapActions.ts":"19","D:\\Programming\\Typescript\\definitely-not-dnd\\src\\features\\map\\Tokens.tsx":"20","D:\\Programming\\Typescript\\definitely-not-dnd\\src\\features\\map\\Token.tsx":"21"},{"size":920,"mtime":1609421966207,"results":"22","hashOfConfig":"23"},{"size":5424,"mtime":499162500000,"results":"24","hashOfConfig":"23"},{"size":1499,"mtime":1609427838171,"results":"25","hashOfConfig":"23"},{"size":1046,"mtime":1609436113029,"results":"26","hashOfConfig":"23"},{"size":1454,"mtime":1609367040295,"results":"27","hashOfConfig":"23"},{"size":534,"mtime":1609623937047,"results":"28","hashOfConfig":"23"},{"size":164,"mtime":1609344295875,"results":"29","hashOfConfig":"23"},{"size":166,"mtime":1609344641686,"results":"30","hashOfConfig":"23"},{"size":161,"mtime":1609344884428,"results":"31","hashOfConfig":"23"},{"size":664,"mtime":1609364799199,"results":"32","hashOfConfig":"23"},{"size":165,"mtime":1609421045820,"results":"33","hashOfConfig":"23"},{"size":396,"mtime":1609426364678,"results":"34","hashOfConfig":"23"},{"size":2307,"mtime":1609589716187,"results":"35","hashOfConfig":"23"},{"size":82,"mtime":1609504229694,"results":"36","hashOfConfig":"23"},{"size":433,"mtime":1609442257098,"results":"37","hashOfConfig":"23"},{"size":1864,"mtime":1609623948011,"results":"38","hashOfConfig":"23"},{"size":1317,"mtime":1609604509766,"results":"39","hashOfConfig":"23"},{"size":997,"mtime":1609598880203,"results":"40","hashOfConfig":"23"},{"size":361,"mtime":1609504550999,"results":"41","hashOfConfig":"23"},{"size":460,"mtime":1609622308052,"results":"42","hashOfConfig":"23"},{"size":1894,"mtime":1609629312247,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1a1t4gz",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"83","usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Programming\\Typescript\\definitely-not-dnd\\src\\index.tsx",[],["93","94"],"D:\\Programming\\Typescript\\definitely-not-dnd\\src\\serviceWorker.ts",[],"D:\\Programming\\Typescript\\definitely-not-dnd\\src\\App.tsx",["95"],"import React, { Component } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport Header from './features/header/Header';\r\nimport { Container, Paper, Theme, makeStyles } from '@material-ui/core';\r\nimport mainPages from \"./features/common/mainPages\";\r\nimport Greeting from './features/greeting/Greeting';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  bgContainer: {\r\n      backgroundColor: theme.palette.secondary.dark,\r\n      height: \"100%\",\r\n  },\r\n  innerContainer: {\r\n      height: \"100%\",\r\n      paddingTop: theme.spacing(2) + \"px\",\r\n      paddingBottom: theme.spacing(1) + \"px\",\r\n  },\r\n  screen: {\r\n      height: \"100%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n\r\n  },\r\n  fullHeight: {\r\n      height: \"100%\",\r\n  }\r\n}))\r\n\r\nconst App = () => {\r\n  const { bgContainer, innerContainer, screen, fullHeight } = useStyles();\r\n\r\n  return ( \r\n      <div className={screen}>\r\n        <Header />\r\n        <Container maxWidth={false} disableGutters={true} className={bgContainer}>\r\n          <Container maxWidth=\"xl\" className={innerContainer}>\r\n            <Paper elevation={1} className={fullHeight}>\r\n              {\r\n                mainPages.map(({href, component}) => {\r\n                  return <Route key={href} path={href} component={component} />\r\n                })\r\n              }\r\n              <Route exact path=\"/\" component={Greeting} />\r\n            </Paper>\r\n          </Container>\r\n        </Container>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\Programming\\Typescript\\definitely-not-dnd\\src\\style\\mainTheme.ts",[],"D:\\Programming\\Typescript\\definitely-not-dnd\\src\\features\\header\\Header.tsx",[],"D:\\Programming\\Typescript\\definitely-not-dnd\\src\\features\\map\\Map.tsx",[],"D:\\Programming\\Typescript\\definitely-not-dnd\\src\\features\\campaigns\\Campaigns.tsx",[],"D:\\Programming\\Typescript\\definitely-not-dnd\\src\\features\\characters\\Characters.tsx",[],"D:\\Programming\\Typescript\\definitely-not-dnd\\src\\features\\monsters\\Monsters.tsx",[],"D:\\Programming\\Typescript\\definitely-not-dnd\\src\\features\\common\\mainPages.tsx",["96"],"// main page details are pulled from here any time they are needed\r\nimport Map from '../map/Map';\r\nimport Campaigns from '../campaigns/Campaigns';\r\nimport Characters from '../characters/Characters';\r\nimport Monsters from '../monsters/Monsters';\r\n\r\nexport default [\r\n    {\r\n        label: \"Map\",\r\n        href: \"/map\",\r\n        component: Map,\r\n    },\r\n    {\r\n        label: \"Characters\",\r\n        href: \"/characters\",\r\n        component: Characters,\r\n    },\r\n    {\r\n        label: \"Campaigns\",\r\n        href: \"/campaigns\",\r\n        component: Campaigns,\r\n    },\r\n    {\r\n        label: \"Monsters\",\r\n        href: \"/monsters\",\r\n        component: Monsters,\r\n    }\r\n]","D:\\Programming\\Typescript\\definitely-not-dnd\\src\\features\\greeting\\Greeting.tsx",[],"D:\\Programming\\Typescript\\definitely-not-dnd\\src\\redux\\store.ts",[],"D:\\Programming\\Typescript\\definitely-not-dnd\\src\\features\\map\\mapReducer.ts",["97"],"import { MOVE_TOKEN, MOVE_MAP } from './mapTypes';\r\nimport { tile, token } from './IMap';\r\nimport SnowflakeId from 'snowflake-id';\r\nimport produce from 'immer';\r\n\r\n// default tile properties\r\nconst defaultTile: tile = {\r\n    moveable: true, // if tokens can move through/be positioned here\r\n    bgOpacity: 0.5, // background opacity [used along with bg and bd colour to show aoe effects and overlays]\r\n    bgColour: [255,255,255], // background colour\r\n    bdColour: \"#000000\", // border colour\r\n    size: 25 // size in pixels\r\n  }\r\n\r\n\r\n// build example blank map with default titles\r\nconst mapTiles: Array<Array<tile>> = new Array(25).fill(Array(1));\r\nmapTiles.forEach((el, ind, arr) => {\r\n    arr[ind] = new Array(25).fill(defaultTile);\r\n})\r\n\r\nmapTiles[0] = mapTiles[0].map((tile) => {return {...tile, moveable:false}})\r\n\r\nconst snowflakeID = new SnowflakeId(); \r\n\r\nconst mapTokens: token[] = [\r\n{id: snowflakeID.generate(), name: \"John\", entity:{type: \"player\", id: 1, name: \"John\", maxHP: 10, defaultMovement: 30}, pos: {x: 5, y: 5}, size: 25},\r\n{id: snowflakeID.generate(), name: \"Tim\", entity:{type: \"player\", id: 2, name: \"Tim\", maxHP: 10, defaultMovement: 15}, pos: {x: 6, y: 12}, size: 25},\r\n{id: snowflakeID.generate(), name: \"Gemima\", entity:{type: \"player\", id: 3, name: \"Gemima\", maxHP: 13, defaultMovement: 35}, pos: {x: 20, y: 5}, size: 25}\r\n]\r\n\r\nconst defaultToken: token = {\r\n    name: \"No Token Selected\",\r\n    entity: {type: \"player\", id: 0, name: \"No Token\", maxHP: 0},\r\n    pos: {x: 0, y: 0},\r\n    size: 0,\r\n}\r\n\r\n// ACTUAL REDUCERS\r\n\r\n// TODO - Add reducer to update position of map from draggable and scale\r\n\r\nconst initialState = {\r\n    id: 0,\r\n    tiles: mapTiles,\r\n    tokens: mapTokens,\r\n    sqSize: 25,\r\n    selectedToken: defaultToken,\r\n    scale: 1,\r\n    pos: {x: 0, y:0},\r\n}\r\n\r\nexport default (state: any = initialState, action) => {\r\n     return produce(state, draft => {\r\n        switch (action.type) {\r\n\r\n        case MOVE_TOKEN: {\r\n            draft.tokens.find((token: token) => (token.id === action.payload.token.id)).pos = {...action.payload.pos};\r\n            break;\r\n        }\r\n\r\n        case MOVE_MAP: {\r\n            draft.pos = {x: action.payload.x, y: action.payload.y};\r\n            break;\r\n        }\r\n\r\n        default:\r\n            break;\r\n        }\r\n    })\r\n}\r\n","D:\\Programming\\Typescript\\definitely-not-dnd\\src\\features\\map\\mapTypes.ts",[],"D:\\Programming\\Typescript\\definitely-not-dnd\\src\\features\\map\\Sidebar.tsx",[],"D:\\Programming\\Typescript\\definitely-not-dnd\\src\\features\\map\\Grid.tsx",["98"],"import { Hidden, makeStyles, Theme } from '@material-ui/core';\r\nimport React, { useRef } from 'react';\r\nimport Tiles from './Tiles';\r\nimport Tokens from './Tokens';\r\nimport { connect } from 'react-redux';\r\nimport Draggable, { DraggableData, DraggableEvent } from 'react-draggable';\r\nimport { moveMap } from './mapActions';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    grid: {\r\n        overflow: \"visible\",\r\n        position: \"absolute\",\r\n        boxSizing: \"border-box\",\r\n        width: (props: any) => {return (props.sqSize * props.grid.width) + \"px\"},\r\n        height: (props: any) => {return (props.sqSize * props.grid.height) + \"px\"},\r\n    },\r\n    gridInner: {\r\n        position: \"relative\",\r\n        width: \"100%\",\r\n        height: \"100%\"\r\n    }\r\n  }))\r\n\r\nconst Grid = (props: any) => {\r\n    const { grid, gridInner } = useStyles(props);\r\n\r\n    const tileRef = useRef(null);\r\n\r\n    const onMapDragStop = (e: DraggableEvent, data: DraggableData) => {\r\n        props.moveMap({x: data.x, y: data.y});\r\n    }\r\n    \r\n    return (\r\n        <Draggable nodeRef={tileRef} handle=\".gridTile\" defaultPosition={props.grid.pos} onStop={onMapDragStop}>\r\n            <div className={grid} ref={tileRef}>\r\n                <div className={gridInner}>\r\n                    <Tiles />\r\n                    <Tokens />\r\n                </div>\r\n            </div>\r\n        </Draggable>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        sqSize: state.map.sqSize,\r\n        grid: {\r\n            height: state.map.tiles.length,\r\n            width: state.map.tiles[0].length,\r\n            pos: {...state.map.pos},\r\n        },\r\n    }\r\n}\r\n\r\nconst mapPropsToDispatch = (dispatch: any) => {\r\n    return {\r\n        moveMap: (pos: {x:number,y:number}) => dispatch(moveMap(pos))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapPropsToDispatch)(Grid);\r\n","D:\\Programming\\Typescript\\definitely-not-dnd\\src\\features\\map\\Tiles.tsx",["99","100","101"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Tile from './Tile';\r\nimport { tile } from './IMap';\r\nimport { makeStyles, Theme } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    gridRow: {\r\n        '&:after': {\r\n            clear: \"both\",\r\n            content: \"both\",\r\n            display: \"table\"\r\n        }\r\n    },\r\n  }))\r\n\r\nconst Tiles = (props: any) => {\r\n    const {gridRow} = useStyles();\r\n\r\n    const renderTiles = (y: number) => {\r\n        const tiles = Array();\r\n\r\n        for (let x=0; x < props.tiles.x; x++) {\r\n            tiles.push((\r\n                <Tile key={x+ \"-\" + y} x={x} y={y} />\r\n            ))\r\n        }\r\n\r\n        return tiles;\r\n    }\r\n\r\n    const renderRows = () => {\r\n        const rows = Array();\r\n\r\n        for (let y=0; y < props.tiles.y; y++) {\r\n            rows.push((\r\n                <div key={\"row-\" + y} className={gridRow}>\r\n                    {renderTiles(y)}\r\n                </div>\r\n            ))\r\n        }\r\n\r\n        return rows;\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {renderRows()}\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        tiles: {x: state.map.tiles.length, y: state.map.tiles[0].length},\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Tiles);\r\n","D:\\Programming\\Typescript\\definitely-not-dnd\\src\\features\\map\\Tile.tsx",["102"],"import { makeStyles, Theme } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {tile} from './IMap';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    tile: (props: any) => {\r\n        return {\r\n            float: \"left\",\r\n            padding: \"0px\",\r\n            boxSizing: \"border-box\",\r\n            width: (props.size + \"px\"),\r\n            height: (props.size + \"px\"),\r\n            background: (\"rgba(\" + props.tile.bgColour + \",\" + props.tile.bgOpacity + \")\"),\r\n            border: \"1px solid\" + props.tile.bdColour,\r\n        }\r\n    },\r\n  }))\r\n\r\nconst Tile = (props: any) => {\r\n    const { tile } = useStyles(props);\r\n\r\n    return (\r\n        <div className={tile + \" gridTile\"}>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => {\r\n    return {\r\n        tile: state.map.tiles[ownProps.y][ownProps.x],\r\n        size: state.map.sqSize\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Tile);\r\n","D:\\Programming\\Typescript\\definitely-not-dnd\\src\\features\\map\\mapActions.ts",[],"D:\\Programming\\Typescript\\definitely-not-dnd\\src\\features\\map\\Tokens.tsx",[],"D:\\Programming\\Typescript\\definitely-not-dnd\\src\\features\\map\\Token.tsx",[],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":26},{"ruleId":"111","severity":1,"message":"112","line":7,"column":1,"nodeType":"113","endLine":28,"endColumn":2},{"ruleId":"111","severity":1,"message":"114","line":53,"column":1,"nodeType":"113","endLine":71,"endColumn":2},{"ruleId":"107","severity":1,"message":"115","line":1,"column":10,"nodeType":"109","messageId":"110","endLine":1,"endColumn":16},{"ruleId":"107","severity":1,"message":"116","line":4,"column":10,"nodeType":"109","messageId":"110","endLine":4,"endColumn":14},{"ruleId":"117","severity":1,"message":"118","line":21,"column":23,"nodeType":"119","messageId":"120","endLine":21,"endColumn":30,"fix":"121"},{"ruleId":"117","severity":1,"message":"118","line":33,"column":22,"nodeType":"119","messageId":"120","endLine":33,"endColumn":29,"fix":"122"},{"ruleId":"107","severity":1,"message":"116","line":4,"column":9,"nodeType":"109","messageId":"110","endLine":4,"endColumn":13},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"@typescript-eslint/no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","Assign arrow function to a variable before exporting as module default","'Hidden' is defined but never used.","'tile' is defined but never used.","@typescript-eslint/no-array-constructor","The array literal notation [] is preferable.","CallExpression","useLiteral",{"range":"125","text":"126"},{"range":"127","text":"126"},"no-global-assign","no-unsafe-negation",[526,533],"[]",[782,789]]